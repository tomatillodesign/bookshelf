{"version":3,"sources":["components/LightBook.js","components/SolidBook.js","components/Header.js","components/BookButtonToRead.js","components/BookButtonAlreadyRead.js","components/SelectRating.js","components/Notes.js","components/ReadDate.js","components/EditBookForm.js","components/BookButtonRemove.js","components/BookModal.js","components/BookButtonMoveToAlreadyRead.js","components/Stars.js","components/BookCard.js","components/RecentlyAddedToRead.js","components/RecentlyAddedAlreadyRead.js","components/Landing.js","components/Input.js","utils/API.js","components/Results.js","components/Search.js","components/Logout.js","components/ChangePassword.js","components/DeleteAccount.js","base.js","components/Settings.js","components/NotFound.js","components/SelectToReadView.js","components/SavedForLater.js","components/SelectAlreadyReadView.js","components/PreviouslyRead.js","components/Register.js","components/Router.js","components/BookManager.js","components/LostPassword.js","components/Login.js","components/LandingPage.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["LightBook","props","icon","faBook","SolidBook","Header","className","href","aria-label","id","faSearch","faCog","BookButtonToRead","createNewBook","event","preventDefault","console","log","book","newBook","addBookToRead","state","title","onClick","this","React","Component","BookButtonAlreadyRead","addBookAlreadyRead","SelectRating","defaultRating","myRatingToPublish","defaultRatingPublish","value","label","ratingOptions","placeholder","options","defaultValue","isClearable","isSearchable","onChange","setRating","Notes","useStyles","makeStyles","theme","root","margin","spacing","marginLeft","classes","edit","TextField","fullWidth","multiline","rows","setNotes","ReadDate","useState","Date","setSelectedDate","formattedDate","bookshelfTimestamp","toISOString","slice","required","type","InputLabelProps","shrink","date","currentTarget","getCompletedDate","EditBookForm","bookshelfRating","bookNotes","bookshelfNote","editThisBook","undefined","entry","editBook","selectedOption","setState","target","updatedTimestamp","parseInt","getTime","toFixed","currentlyEditing","JSON","stringify","onSubmit","hideRating","hideDate","BookButtonRemove","removeThisBook","bookObj","context","removeBookFromAlreadyRead","removeBookFromToRead","window","confirm","faTrashAlt","BookModal","show","setShow","handleClose","handleShow","bookCoverModal","bookTitleModal","coverImageURL","subtitle","hasSubtitle","description","authors","authorClass","authorsToPublish","volumeInfo","imageLinks","thumbnail","large","medium","small","smallThumbnail","categories","publishedDate","length","join","toString","Modal","onHide","closeButton","Title","Body","src","alreadyRead","dangerouslySetInnerHTML","__html","Accordion","Toggle","as","Button","variant","eventKey","Collapse","Footer","savedForLater","removeBook","searchResult","startsWith","replace","BookButtonMoveToAlreadyRead","moveBooktoAlreadyRead","Stars","rating","stars","faStar","BookCard","originalBookJSON","connected","selfLink","toRead","fetch","then","res","json","hasOwnProperty","addNewImagesAlreadyRead","addNewImagesToRead","catch","err","RecentlyAddedToRead","booksToRead","orderedBooksToPublish","sort","a","b","map","index","key","RecentlyAddedAlreadyRead","booksAlreadyRead","Landing","Input","axios","get","Results","books","noResults","location","data","results","filter","test","Search","handleInputChange","name","handleFormSubmit","trim","API","items","toResults","to","pathname","Logout","logOutUser","ChangePassword","resetPassword","DeleteAccount","e","deleteAccount","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","base","Rebase","createClass","database","Settings","auth","emailAddress","loggedInEmail","sendPasswordResetEmail","error","emailedResetLink","user","currentUser","delete","permanentlyDeleteUserAndInfo","NotFound","SelectToReadView","setView","changeToReadView","defaultView","myViewToPublish","defaultViewPublish","SavedForLater","require","booksToReadView","orderedBooks","SelectAlreadyReadView","changeAlreadyReadView","PreviouslyRead","booksAlreadyReadView","Register","handleSubmit","email","password","createUserWithEmailAndPassword","registerNewUser","message","Router","basename","exact","path","component","render","loggedInID","editBookToRead","BookManager","now","bookshelfCover","prevState","bookID","clbCopyBookState","obj","indexOf","splice","ids","newBookCardView","settings","syncState","asArray","LostPassword","sentEmailAddress","showModal","sentEmail","handleEmailChange","bind","emailAdress","Login","handleRegistrationSubmit","handlePWChange","handleShowRegister","handleCloseRegister","authenticateUser","loginError","LandingPage","App","newUserID","uid","newUserEmail","ref","update","ownerID","ownerEmail","localStorage","setItem","signInWithEmailAndPassword","authHandler","authData","async","userUID","signOut","removeItem","reset","remove","loggedInIDLocal","getItem","loggedInEmailLocal","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.78827168.chunk.js","sourcesContent":["import React from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBook } from '@fortawesome/pro-light-svg-icons';\n\nconst LightBook = (props) => (\n     <FontAwesomeIcon icon={faBook} />\n)\n\nexport default LightBook;\n","import React from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBook } from '@fortawesome/pro-duotone-svg-icons';\n\nconst SolidBook = (props) => (\n     <FontAwesomeIcon icon={faBook} />\n)\n\nexport default SolidBook;\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n//import { faCog, faSearch } from '@fortawesome/pro-duotone-svg-icons';\nimport { faCog, faSearch } from '@fortawesome/free-solid-svg-icons';\nimport { faBook } from '@fortawesome/pro-duotone-svg-icons';\nimport LightBook from './LightBook';\nimport SolidBook from './SolidBook';\n\n\nfunction Header() {\n  return (\n    <header className=\"header\">\n      <h1 className=\"logo-area\"><a href=\"/bookshelf/\">Bookshelf</a></h1>\n      <nav className=\"nav-primary\" aria-label=\"Main\" id=\"bookshelf-nav-primary\" className=\"main-menu\">\n           <ul id=\"menu-main-menu\" className=\"menu-main-menu\">\n                <li id=\"menu-item-search\" className=\"menu-item search\"><a href=\"#search\"><FontAwesomeIcon icon={faSearch} /> New Books</a></li>\n                <li id=\"menu-item-saved\" className=\"menu-item saved\"><a href=\"#saved\"><LightBook /> To Read</a></li>\n                <li id=\"menu-item-read\" className=\"menu-item read\"><a href=\"#read\"><SolidBook /> Already Read</a></li>\n                <li id=\"menu-item-settings\" className=\"menu-item settings\"><a href=\"#settings\"><FontAwesomeIcon icon={faCog} /> Settings</a></li>\n           </ul>\n      </nav>\n    </header>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBook } from '@fortawesome/pro-light-svg-icons';\n\nclass BookButtonToRead extends React.Component {\n\n     constructor(props) {\n          super(props);\n          this.state = {\n          }\n     }\n\n     componentDidMount() {\n     }\n\n     createNewBook = (event) => {\n          // 1. Stop the form from submitting\n          event.preventDefault();\n          console.log(this.props.book);\n          const newBook = this.props.book;\n          this.props.addBookToRead(newBook);\n\n     }\n\n     render() {\n\n          return(\n\n               <button\n                    className=\"read-action to-read\"\n                    title=\"Add to your To Read shelf\"\n                    onClick={this.createNewBook}\n                    >\n                    <FontAwesomeIcon icon={faBook} />\n               </button>\n          );\n\n     }\n\n}\n\nexport default BookButtonToRead;\n","import React from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBook } from '@fortawesome/pro-duotone-svg-icons';\n\nclass BookButtonAlreadyRead extends React.Component {\n\n     constructor(props) {\n          super(props);\n          this.state = {\n          }\n     }\n\n     componentDidMount() {\n     }\n\n     createNewBook = (event) => {\n          // 1. Stop the form from submitting\n          event.preventDefault();\n          console.log(this.props.book);\n          const newBook = this.props.book;\n          this.props.addBookAlreadyRead(newBook);\n\n     }\n\n     render() {\n\n          return(\n\n               <button\n                    className=\"read-action already-read\"\n                    title=\"Add to your Already Read shelf\"\n                    onClick={this.createNewBook}\n                    >\n                    <FontAwesomeIcon icon={faBook} />\n               </button>\n          );\n\n     }\n\n}\n\nexport default BookButtonAlreadyRead;\n","import React, { Component } from 'react';\nimport Select from 'react-select';\n\nclass SelectRating extends React.Component {\n\n     constructor(props) {\n          super(props);\n\n     }\n\n\n\n     render() {\n\n          const defaultRating = this.props.defaultRating;\n          console.log(defaultRating);\n\n               var myRatingToPublish = null;\n               if( defaultRating === '5' ) { myRatingToPublish = '⭐⭐⭐⭐⭐ Life-Changing'; }\n               if( defaultRating === '4' ) { myRatingToPublish = '⭐⭐⭐⭐ Great'; }\n               if( defaultRating === '3' ) { myRatingToPublish = '⭐⭐⭐ Good'; }\n               if( defaultRating === '2' ) { myRatingToPublish = '⭐⭐ OK'; }\n               if( defaultRating === '1' ) { myRatingToPublish = \"⭐ Bad / Didn't Finish\"; }\n\n          let defaultRatingPublish = {\n               value: defaultRating,\n               label: myRatingToPublish\n          };\n          if( defaultRating === null ) { defaultRatingPublish = null; }\n          //console.log(defaultRating);\n\n          const ratingOptions = [\n               { value: '5', label: '⭐⭐⭐⭐⭐ Life-Changing' },\n               { value: '4', label: '⭐⭐⭐⭐ Great' },\n               { value: '3', label: '⭐⭐⭐ Good' },\n               { value: '2', label: '⭐⭐ OK' },\n               { value: '1', label: \"⭐ Bad / Didn't Finish\" }\n          ];\n\n          if( defaultRating ) {\n\n               return (\n                 <Select\n                    placeholder='Rating'\n                    options={ratingOptions}\n                    defaultValue={defaultRatingPublish}\n                    isClearable\n                    isSearchable\n                    onChange={this.props.setRating}\n                 />\n               );\n\n          } else {\n\n               return (\n                 <Select\n                    placeholder='Rating'\n                    options={ratingOptions}\n                    isClearable\n                    isSearchable\n                    onChange={this.props.setRating}\n                 />\n               );\n\n          }\n\n     }\n\n}\n\nexport default SelectRating;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\n\nclass Notes extends React.Component {\n\n     useStyles = makeStyles(theme => ({\n       root: {\n         '& > *': {\n           margin: theme.spacing(1),\n           marginLeft: 0\n         },\n       },\n     }));\n\n  classes = this.useStyles;\n\n //  onChange = (event) => {\n //       console.log(event.target.value);\n // }\n\nrender() {\n\n          const edit = this.props.edit;\n\n          if( edit ) {\n\n       return (\n\n           <TextField\n               id=\"notes-basic-outline\"\n               defaultValue={this.props.defaultValue}\n               label={this.props.placeholder}\n               fullWidth\n               multiline\n               rows=\"4\"\n               onChange={this.props.setNotes}\n               />\n\n       );\n\n } else {\n\n      return (\n\n          <TextField\n              id=\"outlined-basic\"\n              defaultValue={this.props.defaultValue}\n              label={this.props.placeholder}\n              fullWidth\n              multiline\n              rows=\"4\"\n              onChange={this.props.setNotes}\n              />\n\n      );\n\n}\n\n}\n\n}\n\nexport default Notes;\n","//import 'date-fns';\nimport React from 'react';\n//import DateFnsUtils from '@date-io/date-fns';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\n\nexport default function ReadDate(props) {\n\n// The first commit of Material-UI\nconst [selectedDate, setSelectedDate] = React.useState(new Date());\n\nconst handleDateChange = date => {\n     console.log(date.currentTarget.value);\n     setSelectedDate(date.currentTarget.value);\n     props.getCompletedDate(date.currentTarget.value);\n\n};\n\n\nconst bookshelfTimestamp = new Date(props.bookshelfTimestamp);\nconst formattedDate = bookshelfTimestamp.toISOString().slice(0,10);\nconsole.log(formattedDate);\n\nreturn (\n     <TextField\n         id=\"date\"\n         required\n         label=\"Date Completed\"\n         type=\"date\"\n         defaultValue={formattedDate}\n         className=\"book-date-field\"\n         InputLabelProps={{\n           shrink: true,\n         }}\n         onChange={handleDateChange}\n  />\n);\n\n}\n","import React from 'react';\nimport Select from 'react-select';\n//import Notes from './Notes';\nimport SelectRating from './SelectRating';\nimport Notes from './Notes';\nimport ReadDate from './ReadDate';\n\n///////////////////////////////////////////////////////////////////////\n\n\nclass EditBookForm extends React.Component {\n\n     constructor(props) {\n          super(props);\n          this.state = {\n               currentlyEditing: true,\n               book: this.props.book,\n               bookshelfNote: this.props.bookshelfNote,\n               bookshelfRating: this.props.bookshelfRating\n          }\n     }\n\n\n\n     id = this.props.book.id;\n     bookshelfRating = this.props.bookshelfRating;\n     bookNotes = this.props.bookshelfNote;\n     bookshelfTimestamp = this.props.bookshelfTimestamp;\n\n\n     editThisBook = (event) => {\n          // 1. Stop the form from submitting\n          event.preventDefault();\n          const book = this.state.book;\n          console.log(book);\n\n          // Make sure no fields cause \"undefined\" errors even if missing info\n               // if( this.count === undefined ) { this.count = 0; }\n               // if( this.type_of_beer === undefined ) { this.type_of_beer = ''; }\n               // if( this.brewery_name === undefined ) {\n               //      this.brewery_name = '';\n               //      this.brewery_slug = '';\n               // }\n\n               console.log(this.state.book.bookshelfTimestamp);\n\n               //timestamp fix\n               //let updatedDate =\n\n\n               if( this.bookshelfTimestamp === undefined ) { this.bookshelfTimestamp = this.state.book.bookshelfTimestamp; }\n               if( this.bookshelfRating === undefined ) { this.bookshelfRating = this.state.book.bookshelfRating; }\n               if( this.bookNotes === undefined ) { this.bookNotes = this.state.book.bookshelfNote; }\n\n               book.bookshelfRating = this.bookshelfRating;\n               book.bookshelfNote = this.bookNotes;\n               book.bookshelfTimestamp = this.bookshelfTimestamp;\n               const entry = book;\n\n          console.log(entry);\n          // console.log(this.props.editCurrentBeer);\n          // 2 add the new beer to state (App.js)\n          this.props.editBook(entry);\n\n     }\n\n     setRating = (selectedOption) => {\n          if(selectedOption) {\n               this.bookshelfRating = selectedOption.value;\n               this.setState({ bookshelfRating: selectedOption.value });\n          }\n          else {\n               this.setState({ bookshelfRating: 505 });\n          }\n\n     }\n\n     setNotes = (event) => {\n          this.bookNotes = (event.target.value);\n     }\n\n     getCompletedDate = (date) => {\n          //this.bookshelfTimestamp = date;\n          console.log(\"Completed DATE: \" + this.bookshelfTimestamp);\n          let updatedTimestamp = parseInt((new Date(date).getTime()).toFixed(0));\n          console.log(updatedTimestamp);\n          this.bookshelfTimestamp = updatedTimestamp;\n     }\n\n\nrender() {\n\n     console.log(\"Current book: \" + JSON.stringify(this.props.book));\n     console.log(\"Current book RATING: \" + JSON.stringify(this.props.bookshelfRating));\n     const defaultRating = this.props.bookshelfRating;\n     const bookshelfNote = this.props.bookshelfNote;\n     const bookshelfTimestamp = this.props.bookshelfTimestamp;\n     console.log(\"NOTE: \" + bookshelfNote);\n\n       return (\n            <>\n\n            <form className=\"edit-book\" onSubmit={this.editThisBook} >\n               <div className=\"top-info-line\">\n                      { this.props.hideRating !== true &&\n                         <div className=\"book-rating-area\">\n                         <SelectRating\n                              setRating={this.setRating}\n                              defaultRating={defaultRating}\n                         />\n                         </div>\n                    }\n                    { this.props.hideDate !== true &&\n                         <div className=\"book-date-area\">\n                         <ReadDate\n                              bookshelfTimestamp={bookshelfTimestamp}\n                              getCompletedDate={this.getCompletedDate}\n                         />\n                         </div>\n                    }\n               </div>\n               <Notes\n                    placeholder={'Add a note...'}\n                    defaultValue={bookshelfNote}\n                    setNotes={this.setNotes}\n               />\n               <button type=\"submit\" className=\"update-this-book\">Save Changes</button>\n            </form>\n         </>\n       );\n     }\n\n}\n\n\nexport default EditBookForm;\n","import React from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrashAlt } from '@fortawesome/pro-solid-svg-icons';\n\nclass BookButtonRemove extends React.Component {\n\n     constructor(props) {\n          super(props);\n          this.state = {\n          }\n     }\n\n     componentDidMount() {\n     }\n\n     removeThisBook = (event) => {\n          // 1. Stop the form from submitting\n          event.preventDefault();\n          // console.log(this.props.book);\n          // console.log(this.props.context);\n          // console.log(this.props.removeBookFromAlreadyRead);\n          const bookObj = this.props.book;\n\n          if(this.props.context === 'removeBookFromAlreadyRead') {\n               this.props.removeBookFromAlreadyRead(bookObj);\n          }\n\n          if(this.props.context === 'removeBookFromToRead') {\n               this.props.removeBookFromToRead(bookObj);\n          }\n\n\n\n     }\n\n     render() {\n\n          return(\n\n               <button\n                    className=\"read-action remove-book\"\n                    title=\"Permanently remove this book from your collection\"\n                    onClick={event =>\n                 window.confirm(\n                   \"Are you sure you want to delete this book? All of your ratings and notes for this book will also be removed. You cannot undo this action.\"\n              ) && this.removeThisBook(event)\n               }>\n          <FontAwesomeIcon icon={faTrashAlt} />\n          </button>\n          );\n\n     }\n\n}\n\nexport default BookButtonRemove;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Accordion from 'react-bootstrap/Accordion';\nimport BookButtonToRead from './BookButtonToRead.js';\nimport BookButtonAlreadyRead from './BookButtonAlreadyRead.js';\nimport EditBookForm from './EditBookForm.js';\nimport BookButtonRemove from './BookButtonRemove';\n\nimport SelectRating from './SelectRating';\n\nexport default function BookModal(props) {\n\n     const [show, setShow] = React.useState(false);\n\n     const handleClose = () => setShow(false);\n     const handleShow = () => setShow(true);\n\n     const book = props.book;\n\n     const bookCoverModal = props.bookCoverModal;\n     const bookTitleModal = props.bookTitleModal;\n\n     let coverImageURL = null;\n     let title = null;\n     let subtitle = null;\n     let hasSubtitle = false;\n     let description = null;\n     let authors = null;\n     let hasAuthor = false;\n     let authorClass = null;\n     let categories = null;\n     let authorsToPublish = null;\n     let dateToPublish = null;\n     let date = null;\n\n     if( book.volumeInfo !== undefined ) {\n          if( book.volumeInfo.imageLinks !== undefined ) {\n               console.log(book.volumeInfo.imageLinks.thumbnail);\n               coverImageURL = book.volumeInfo.imageLinks.thumbnail;\n               coverImageURL = book.volumeInfo.imageLinks.large;\n               if( book.volumeInfo.imageLinks.large === undefined || book.volumeInfo.imageLinks.large === '' ) {\n                    coverImageURL = book.volumeInfo.imageLinks.medium;\n               }\n               if( book.volumeInfo.imageLinks.medium === undefined || book.volumeInfo.imageLinks.medium === '' ) {\n                    coverImageURL = book.volumeInfo.imageLinks.small;\n               }\n               if( book.volumeInfo.imageLinks.small === undefined || book.volumeInfo.imageLinks.small === '' ) {\n                    coverImageURL = book.volumeInfo.imageLinks.smallThumbnail;\n               }\n               if( book.volumeInfo.imageLinks.smallThumbnail === undefined ) {\n                    coverImageURL = book.volumeInfo.imageLinks.thumbnail;\n               }\n          }\n\n          title = book.volumeInfo.title;\n          if( book.volumeInfo.subtitle !== undefined ) {\n               hasSubtitle = true;\n               authorClass = \" has-subtitle\";\n               subtitle = <h3 className=\"book-subtitle\">{book.volumeInfo.subtitle}</h3>;\n          }\n          if( book.volumeInfo.authors !== undefined ) { authors = book.volumeInfo.authors; }\n\n          description = book.volumeInfo.description;\n\n          categories = book.volumeInfo.categories;\n          date = book.volumeInfo.publishedDate;\n\n          if( book.volumeInfo.authors !== undefined ) {\n               if( authors.length === 1 ) { authorsToPublish = 'By ' + authors; }\n               if( authors.length === 2 ) { authorsToPublish = 'By ' + authors.join(' & '); }\n               if( authors.length > 2 ) { authorsToPublish = 'By ' + authors.join(', '); }\n\n               if( hasSubtitle ) {\n                    authorsToPublish = <div className={\"authors\" + authorClass}>{authorsToPublish}</div>;\n               } else {\n                    authorsToPublish = <div className=\"authors\">{authorsToPublish}</div>;\n               }\n          }\n\n          if( date ) {\n               let yearOnly = date.toString()\n               dateToPublish = 'Date: ' + yearOnly;\n          }\n     }\n\n     //console.log(props.bookshelfRating);\n\n     if( bookTitleModal ) {\n\n          return (\n            <>\n              <button onClick={handleShow} className=\"card-book-title\">\n                <h2 className=\"book-title\">{title}</h2>\n              </button>\n\n              <Modal show={show} onHide={handleClose} className=\"single-book-modal\">\n                <Modal.Header closeButton>\n                  <Modal.Title className=\"single-book-title\">{title}</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <div className=\"small-thumbnail-area\">\n                         <img src={coverImageURL} />\n                    </div>\n                    {subtitle}\n                    {authorsToPublish}\n                    { props.alreadyRead !== true &&\n                         <>\n                         <EditBookForm\n                              book={book}\n                              hideRating={true}\n                              hideDate={true}\n                              bookshelfRating={props.bookshelfRating}\n                              bookshelfNote={props.bookshelfNote}\n                              bookshelfTimestamp={props.bookshelfTimestamp}\n                              editBook={props.editBook}\n                         />\n                         <div className=\"book-description\" dangerouslySetInnerHTML={ { __html: description } }></div>\n                        </>\n                   }\n                    { props.alreadyRead &&\n                         <>\n                         <EditBookForm\n                              book={book}\n                              bookshelfRating={props.bookshelfRating}\n                              bookshelfNote={props.bookshelfNote}\n                              bookshelfTimestamp={props.bookshelfTimestamp}\n                              editBook={props.editBook}\n                         />\n                         <Accordion>\n                              <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\" className=\"already-read-description-toggle\">\n                                <h3>Description</h3>\n                              </Accordion.Toggle>\n                            <Accordion.Collapse eventKey=\"0\">\n                              <div className=\"book-description\" dangerouslySetInnerHTML={ { __html: description } }></div>\n                            </Accordion.Collapse>\n                        </Accordion>\n                        </>\n                   }\n                </Modal.Body>\n                <Modal.Footer>\n                <div className=\"book-meta button-area\">\n                { props.alreadyRead &&\n                     <BookButtonRemove\n                         book={book}\n                         context={'removeBookFromAlreadyRead'}\n                         removeBookFromAlreadyRead={props.removeBookFromAlreadyRead}\n                      />\n                }\n                { props.savedForLater &&\n                     <>\n                     <BookButtonRemove\n                          book={book}\n                          removeBook={props.removeBookFromToRead}\n                          context={'removeBookFromToRead'}\n                          removeBookFromToRead={props.removeBookFromToRead}\n                     />\n                     <BookButtonAlreadyRead />\n                     </>\n                }\n                { props.searchResult &&\n                     <>\n                     <BookButtonToRead />\n                     <BookButtonAlreadyRead />\n                     </>\n                }\n                </div>\n                </Modal.Footer>\n              </Modal>\n            </>\n          );\n\n     } else if ( bookCoverModal ) {\n\n          if( coverImageURL !== null ) {\n               console.log(\"1-26 Update 1025am - COVER IMG URL: \" + coverImageURL);\n               if( coverImageURL.startsWith(\"http://\") ) {\n                    coverImageURL = coverImageURL.replace(\"http://\", \"https://\");\n                    console.log(\"Updated COVER IMG URL: \" + coverImageURL);\n               }\n          }\n\n          return (\n            <>\n              <div className=\"cover-image-area\">\n                   <button onClick={handleShow} className=\"card-book-cover\"><img src={coverImageURL} className=\"cover-image\" /></button>\n              </div>\n\n              <Modal show={show} onHide={handleClose} className=\"single-book-modal\">\n                <Modal.Header closeButton>\n                  <Modal.Title className=\"single-book-title\">{title}</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                     <div className=\"small-thumbnail-area\">\n                          <img src={coverImageURL} />\n                     </div>\n                    {subtitle}\n                    {authorsToPublish}\n                    { props.alreadyRead !== true &&\n                         <>\n                         <EditBookForm\n                              book={book}\n                              hideRating={true}\n                              hideDate={true}\n                              bookshelfRating={props.bookshelfRating}\n                              bookshelfNote={props.bookshelfNote}\n                              bookshelfTimestamp={props.bookshelfTimestamp}\n                              editBook={props.editBook}\n                         />\n                         <div className=\"book-description\" dangerouslySetInnerHTML={ { __html: description } }></div>\n                        </>\n                   }\n                    { props.alreadyRead &&\n                         <>\n                         <EditBookForm\n                              book={book}\n                              bookshelfRating={props.bookshelfRating}\n                              bookshelfNote={props.bookshelfNote}\n                              bookshelfTimestamp={props.bookshelfTimestamp}\n                              editBook={props.editBook}\n                         />\n                         <Accordion>\n                              <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\" className=\"already-read-description-toggle\">\n                                <h3>View Description +</h3>\n                              </Accordion.Toggle>\n                            <Accordion.Collapse eventKey=\"0\">\n                              <div className=\"book-description\" dangerouslySetInnerHTML={ { __html: description } }></div>\n                            </Accordion.Collapse>\n                        </Accordion>\n                        </>\n                   }\n                </Modal.Body>\n                <Modal.Footer>\n                <div className=\"book-meta button-area\">\n                { props.alreadyRead &&\n                     <BookButtonRemove\n                         book={book}\n                         context={'removeBookFromAlreadyRead'}\n                         removeBookFromAlreadyRead={props.removeBookFromAlreadyRead}\n                      />\n                }\n                { props.savedForLater &&\n                     <>\n                     <BookButtonRemove\n                          book={book}\n                          removeBook={props.removeBookFromToRead}\n                          context={'removeBookFromToRead'}\n                          removeBookFromToRead={props.removeBookFromToRead}\n                     />\n                     <BookButtonAlreadyRead />\n                     </>\n                }\n                { props.searchResult &&\n                     <>\n                     <BookButtonToRead />\n                     <BookButtonAlreadyRead />\n                     </>\n                }\n                </div>\n                </Modal.Footer>\n              </Modal>\n            </>\n          );\n\n     }\n\n}\n","import React from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBook } from '@fortawesome/pro-duotone-svg-icons';\n\nclass BookButtonMoveToAlreadyRead extends React.Component {\n\n     constructor(props) {\n          super(props);\n          this.state = {\n          }\n     }\n\n     componentDidMount() {\n     }\n\n     createNewBook = (event) => {\n          // 1. Stop the form from submitting\n          event.preventDefault();\n          console.log(this.props.book);\n          const newBook = this.props.book;\n          this.props.moveBooktoAlreadyRead(newBook);\n\n     }\n\n     render() {\n\n          return(\n\n               <button\n                    className=\"read-action already-read\"\n                    title=\"Move this book to your Already Read shelf\"\n                    onClick={this.createNewBook}\n                    >\n                    <FontAwesomeIcon icon={faBook} />\n               </button>\n          );\n\n     }\n\n}\n\nexport default BookButtonMoveToAlreadyRead;\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faStar } from '@fortawesome/free-solid-svg-icons';\n\nfunction Stars(props) {\n\n\n     const rating = parseInt(props.bookshelfRating);\n     console.log(props.bookshelfRating);\n\n     let stars = null;\n     if(rating === 5) {\n          stars = <><span className=\"star-icon\"><FontAwesomeIcon icon={faStar} /></span><span className=\"star-icon\"><FontAwesomeIcon icon={faStar} /></span><span className=\"star-icon\"><FontAwesomeIcon icon={faStar} /></span><span className=\"star-icon\"><FontAwesomeIcon icon={faStar} /></span><span className=\"star-icon\"><FontAwesomeIcon icon={faStar} /></span></>;\n     }\n     else if(rating === 4) {\n          stars = <><span className=\"star-icon\"><FontAwesomeIcon icon={faStar} /></span><span className=\"star-icon\"><FontAwesomeIcon icon={faStar} /></span><span className=\"star-icon\"><FontAwesomeIcon icon={faStar} /></span><span className=\"star-icon\"><FontAwesomeIcon icon={faStar} /></span></>;\n     }\n     else if(rating === 3) {\n          stars = <><span className=\"star-icon\"><FontAwesomeIcon icon={faStar} /></span><span className=\"star-icon\"><FontAwesomeIcon icon={faStar} /></span><span className=\"star-icon\"><FontAwesomeIcon icon={faStar} /></span></>;\n     }\n     else if(rating === 2) {\n          stars = <><span className=\"star-icon\"><FontAwesomeIcon icon={faStar} /></span><span className=\"star-icon\"><FontAwesomeIcon icon={faStar} /></span></>;\n     }\n     else if(rating === 1) {\n          stars = <><span className=\"star-icon\"><FontAwesomeIcon icon={faStar} /></span></>;\n     }\n     else {\n          stars = <div className=\"not-yet-rated\">Not yet rated</div>;\n     }\n\n  return (\n    <div className=\"star-rating-area\">\n          {stars}\n    </div>\n  );\n}\n\nexport default Stars;\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faInfoCircle } from '@fortawesome/pro-light-svg-icons';\nimport { faFileEdit } from '@fortawesome/pro-light-svg-icons';\nimport { faStar } from '@fortawesome/free-solid-svg-icons';\nimport BookModal from './BookModal.js';\nimport BookButtonToRead from './BookButtonToRead.js';\nimport BookButtonAlreadyRead from './BookButtonAlreadyRead.js';\nimport BookButtonRemove from './BookButtonRemove.js';\nimport BookButtonMoveToAlreadyRead from './BookButtonMoveToAlreadyRead';\nimport Stars from './Stars';\n\nclass BookCard extends React.Component {\n\n     constructor(props) {\n          super(props);\n\n          this.state = {\n               originalBookJSON: null,\n               connected: false,\n            };\n\n     }\n\n     componentDidMount() {\n\n     // get vars from book\n     console.log(this.props.book);\n\n     let selfLink = this.props.book.selfLink;\n     console.log(selfLink);\n\n     if( this.props.alreadyRead === true || this.props.toRead === true ) {\n          if( (this.props.book.volumeInfo.imageLinks.large === undefined || this.props.book.volumeInfo.imageLinks.large === '')\n               && (this.props.book.volumeInfo.imageLinks.medium === undefined || this.props.book.volumeInfo.imageLinks.medium === '')\n               && (this.props.book.volumeInfo.imageLinks.small === undefined || this.props.book.volumeInfo.imageLinks.small === '') ) {\n\n               // Get the details straight from Google, including larger image sizes\n               fetch(selfLink)\n               .then(res => res.json())\n               .then((originalBookJSON) => {\n                 console.log('Checkout this JSON! ', originalBookJSON);\n                 //coverImageURL = originalBookJSON.volumeInfo.imageLinks.large;\n                 if(originalBookJSON.hasOwnProperty('error')) {\n                      this.setState({\n                          connected: false\n                     });\n                 } else {\n\n                      // update thumbnail URL to larger size if possible\n                      if( this.props.alreadyRead === true  ) { this.props.addNewImagesAlreadyRead(originalBookJSON); }\n                      if( this.props.toRead === true  ) { this.props.addNewImagesToRead(originalBookJSON); }\n                      console.log(\"UPDATED: \" + originalBookJSON.volumeInfo.title);\n\n                      this.setState({\n                           originalBookJSON: originalBookJSON,\n                           connected: true\n                      });\n                 }\n\n                    })\n                    .catch(err => {\n                         this.setState({\n                              connected: false\n                         });\n                         throw err;\n                    });\n\n               }\n\n          }\n\n     }\n\n     render() {\n\n          // console.log(this.state.originalBookJSON);\n          // console.log(this.state.connected);\n          let book = this.state.originalBookJSON;\n          let bookJSON = JSON.stringify(book);\n\n          if( this.state.connected === false) {\n               book = this.props.book;\n          }\n\n          if( book !== null ) {\n\n          let coverImageURL = null;\n          let title = null;\n          let subtitle = null;\n          let authors = null;\n          let categories = null;\n          let authorsToPublish = null;\n          let dateToPublish = null;\n          let date = null;\n\n          if( book.volumeInfo !== undefined ) {\n\n               if( book.volumeInfo.imageLinks !== undefined ) {\n                    console.log(book.volumeInfo.imageLinks.thumbnail);\n                    coverImageURL = book.volumeInfo.imageLinks.thumbnail;\n                    coverImageURL = book.volumeInfo.imageLinks.large;\n                    if( book.volumeInfo.imageLinks.large === undefined || book.volumeInfo.imageLinks.large === '' ) {\n                         coverImageURL = book.volumeInfo.imageLinks.medium;\n                    }\n                    if( book.volumeInfo.imageLinks.medium === undefined || book.volumeInfo.imageLinks.medium === '' ) {\n                         coverImageURL = book.volumeInfo.imageLinks.small;\n                    }\n                    if( book.volumeInfo.imageLinks.small === undefined || book.volumeInfo.imageLinks.small === '' ) {\n                         coverImageURL = book.volumeInfo.imageLinks.smallThumbnail;\n                    }\n                    if( book.volumeInfo.imageLinks.smallThumbnail === undefined ) {\n                         coverImageURL = book.volumeInfo.imageLinks.thumbnail;\n                    }\n               }\n\n\n\n               title = book.volumeInfo.title;\n               if( book.volumeInfo.subtitle !== undefined ) { subtitle = book.volumeInfo.subtitle; }\n               if( book.volumeInfo.authors !== undefined ) { authors = book.volumeInfo.authors; }\n\n               categories = book.volumeInfo.categories;\n               date = book.volumeInfo.publishedDate;\n\n               if( book.volumeInfo.authors !== undefined ) {\n                    if( authors.length === 1 ) { authorsToPublish = 'By ' + authors; }\n                    if( authors.length === 2 ) { authorsToPublish = 'By ' + authors.join(' & '); }\n                    if( authors.length > 2 ) { authorsToPublish = 'By ' + authors.join(', '); }\n               }\n\n               if( date ) {\n                    let yearOnly = date.toString()\n                    dateToPublish = 'Date: ' + yearOnly;\n               }\n          }\n\n          // show star ratings\n          //console.log(this.props.book.bookshelfRating);\n          let bookshelfRating = this.props.book.bookshelfRating;\n          let bookshelfNote = this.props.book.bookshelfNote;\n\n          let bookshelfTimestamp = this.props.book.bookshelfTimestamp;\n          console.log(bookshelfTimestamp);\n\n          //console.log(this.props.removeBookFromAlreadyRead);\n\n\n          return(\n\n               <div className=\"book-card\">\n                    <BookModal\n                         bookCoverModal={true}\n                         book={book}\n                         alreadyRead={this.props.alreadyRead}\n                         savedForLater={this.props.savedForLater}\n                         editBook={this.props.editBook}\n                         bookshelfRating={bookshelfRating}\n                         bookshelfNote={bookshelfNote}\n                         bookshelfTimestamp={bookshelfTimestamp}\n                         removeBookFromAlreadyRead={this.props.removeBookFromAlreadyRead}\n                         removeBookFromToRead={this.props.removeBookFromToRead}\n                    />\n                    <BookModal\n                         bookTitleModal={true}\n                         book={book}\n                         alreadyRead={this.props.alreadyRead}\n                         savedForLater={this.props.savedForLater}\n                         editBook={this.props.editBook}\n                         bookshelfRating={bookshelfRating}\n                         bookshelfNote={bookshelfNote}\n                         bookshelfTimestamp={bookshelfTimestamp}\n                         removeBookFromAlreadyRead={this.props.removeBookFromAlreadyRead}\n                         removeBookFromToRead={this.props.removeBookFromToRead}\n                    />\n                    <div className=\"book-meta-area\">\n                         <div className=\"book-meta author\">{authorsToPublish}</div>\n                         <div className=\"book-meta button-area\">\n                         { this.props.alreadyRead === true &&\n                              <>\n                              <Stars bookshelfRating={bookshelfRating} />\n                              </>\n                         }\n                         { this.props.toRead === true &&\n                              <>\n                              <BookButtonRemove\n                                   book={this.props.book}\n                                   removeBook={this.props.removeBookFromToRead}\n                                   context={'removeBookFromToRead'}\n                                   removeBookFromToRead={this.props.removeBookFromToRead}\n                              />\n                              <BookButtonMoveToAlreadyRead\n                                   book={this.props.book}\n                                   moveBooktoAlreadyRead={this.props.moveBooktoAlreadyRead}\n                              />\n                              </>\n                         }\n                         { this.props.searchResult === true &&\n                              <>\n                              <BookButtonToRead\n                                   book={this.props.book}\n                                   addBookToRead={this.props.addBookToRead}\n                              />\n                              <BookButtonAlreadyRead\n                                   book={this.props.book}\n                                   addBookAlreadyRead={this.props.addBookAlreadyRead}\n                              />\n                              </>\n                         }\n                         </div>\n                    </div>\n               </div>\n\n          );\n\n          } else {\n          return 'NOT WORKING';\n     }\n\n}\n\n}\n\nexport default BookCard;\n","import React from 'react';\nimport BookCard from './BookCard';\n\nfunction RecentlyAddedToRead(props) {\n\n     const booksToRead = props.booksToRead;\n     let orderedBooks = null;\n     // console.log(booksToRead);\n     // console.log(booksToRead.length);\n\n      if( booksToRead.length !== 0 && booksToRead !== undefined ) {\n\n           // New sorting\n           orderedBooks = [...booksToRead].sort(function (a, b) {\n\n                // If the first item has a higher number, move it down\n                // If the first item has a lower number, move it up\n                if (a.bookshelfTimestamp > b.bookshelfTimestamp) return -1;\n                if (a.bookshelfTimestamp < b.bookshelfTimestamp) return 1;\n\n                // If the count number is the same between both items, sort alphabetically\n                // If the first item comes first in the alphabet, move it up\n                // Otherwise move it down\n                if (a.volumeInfo.title > b.volumeInfo.title) return 1;\n                if (a.volumeInfo.title < b.volumeInfo.title) return -1;\n\n           });\n\n           let orderedBooksToPublish = orderedBooks.slice(0, 4);\n\n            return (\n                <div className=\"recently-added-to-read-area\">\n                    <h2 className=\"section-title\">Up Next</h2>\n                         <div className=\"results-grid four-col\">\n                        {orderedBooksToPublish.map((book, index) => (\n                             <BookCard\n                                      key={book.id}\n                                      book={book}\n                                      editBook={props.editBook}\n                                      moveBooktoAlreadyRead={props.moveBooktoAlreadyRead}\n                                      removeBookFromToRead={props.removeBookFromToRead}\n                                      addNewImagesToRead={props.addNewImagesToRead}\n                                      savedForLater={true}\n                                      toRead={true}\n                              />\n                      ))}\n                      </div>\n                </div>\n          );\n\n     } else {\n\n          return (\n              <div className=\"recently-added-to-read-area nothing-yet\">\n                    <p>Time to <a href=\"/bookshelf/#search\">add more books</a> to your shelf!</p>\n              </div>\n        );\n\n     }\n}\n\nexport default RecentlyAddedToRead;\n","import React from 'react';\nimport BookCard from './BookCard';\n\nfunction RecentlyAddedAlreadyRead(props) {\n\n     const booksAlreadyRead = props.booksAlreadyRead;\n     let orderedBooks = null;\n     // console.log(booksToRead);\n     // console.log(booksToRead.length);\n\n      if( booksAlreadyRead.length !== 0 && booksAlreadyRead !== undefined ) {\n\n           // New sorting\n           orderedBooks = [...booksAlreadyRead].sort(function (a, b) {\n\n                // If the first item has a higher number, move it down\n                // If the first item has a lower number, move it up\n                if (a.bookshelfTimestamp > b.bookshelfTimestamp) return -1;\n                if (a.bookshelfTimestamp < b.bookshelfTimestamp) return 1;\n\n                // If the count number is the same between both items, sort alphabetically\n                // If the first item comes first in the alphabet, move it up\n                // Otherwise move it down\n                if (a.volumeInfo.title > b.volumeInfo.title) return 1;\n                if (a.volumeInfo.title < b.volumeInfo.title) return -1;\n\n           });\n\n           let orderedBooksToPublish = orderedBooks.slice(0, 4);\n\n            return (\n                <div className=\"recently-added-already-read-area\">\n                <h2 className=\"section-title\">Just Finished</h2>\n                         <div className=\"results-grid four-col\">\n                        {orderedBooksToPublish.map((book, index) => (\n                             <BookCard\n                                      key={book.id}\n                                      book={book}\n                                      editBook={props.editBook}\n                                      moveBooktoAlreadyRead={props.moveBooktoAlreadyRead}\n                                      removeBookFromAlreadyRead={props.removeBookFromAlreadyRead}\n                                      addNewImagesAlreadyRead={props.addNewImagesAlreadyRead}\n                                      alreadyRead={true}\n                              />\n                      ))}\n                      </div>\n                </div>\n          );\n\n     } else {\n\n          return (\n              <div className=\"recently-added-already-read-area nothing-yet\">\n              </div>\n        );\n\n     }\n}\n\nexport default RecentlyAddedAlreadyRead;\n","import React from 'react';\nimport RecentlyAddedToRead from './RecentlyAddedToRead';\nimport RecentlyAddedAlreadyRead from './RecentlyAddedAlreadyRead';\n\n\n/// This page is once you've already logged in\n\nfunction Landing(props) {\n\n  return (\n    <div className=\"landing-page-area single-page\">\n\n      <RecentlyAddedToRead\n          booksToRead={props.booksToRead}\n          editBook={props.editBook}\n          moveBooktoAlreadyRead={props.moveBooktoAlreadyRead}\n          removeBookFromToRead={props.removeBookFromToRead}\n          addNewImagesToRead={props.addNewImagesToRead}\n      />\n      <RecentlyAddedAlreadyRead\n          booksAlreadyRead={props.booksAlreadyRead}\n          editBook={props.editBook}\n          removeBookFromAlreadyRead={props.removeBookFromAlreadyRead}\n          addNewImagesAlreadyRead={props.addNewImagesAlreadyRead}\n      />\n    </div>\n  );\n}\n\nexport default Landing;\n","import React from \"react\";\nimport Label from \"./Label.js\";\n\nconst Input = (props) => (\n  <div className=\"form-group\">\n    <input className=\"form-control\" {...props}/>\n  </div>\n)\n\nexport default Input;\n\n// make sure the <Input> component uses a closing tag rather than being self-closing so you can put the label text in the {props.children} location\n\n//  You will also need props for the 'for' and 'id' properties (labeled above as 'props.control'), as well as the placeholder.\n","import axios from \"axios\";\n\nexport default {\n  // Searches the NYT books according to the search criteria given in the form\n  getNewBooks: function(title) {\n    return axios.get(\"https://www.googleapis.com/books/v1/volumes?q=\" + title + \"&maxResults=36\" + \"&key=AIzaSyDq8sjhqCfhczp_tMSh1pv_WzDQo0eirNU\");\n  },\n  // Gets saved Books\n  getSavedBooks: function() {\n    return axios.get(\"/api/books/\");\n  },\n  // Deletes the Book with the given id\n  deleteBook: function(id) {\n    return axios.delete(\"/api/books/\" + id);\n  },\n  // Saves a Book to the database\n  saveBook: function(bookData) {\n    return axios.post(\"/api/books\", bookData);\n  }\n};\n","import React from 'react';\nimport BookCard from './BookCard.js';\n\nclass Results extends React.Component {\n\n     constructor(props) {\n          super(props);\n\n     this.state = {\n          books: [],\n          noResults: false\n       };\n\n     }\n\n     componentDidMount() {\n          console.log(this.props.location);\n          const data = this.props.location.data;\n          console.log(data);\n          if (data && data.results.length > 0) {\n\n           this.setState({\n             books: data.results.filter((value, index) => index < 40),\n           });\n         } else {\n           this.setState({\n             noResults: true\n           });\n         }\n     }\n\n     render() {\n\n          console.log(this.state.books);\n          console.log(this.props.addBookAlreadyRead);\n          console.log(this.props.test);\n\n       return (\n         <div className=\"results-page-area single-page\">\n           <h1>Search Results</h1>\n\n           <div className=\"results-grid\">\n           {this.state.books.map((book, index) => (\n                <BookCard\n                         key={book.id}\n                         book={book}\n                         searchResult={true}\n                         addBookAlreadyRead={this.props.addBookAlreadyRead}\n                         addBookToRead={this.props.addBookToRead}\n                    />\n          ))}\n          </div>\n         </div>\n       );\n\n     }\n}\n\nexport default Results;\n","import React from 'react';\nimport { Link, Redirect } from \"react-router-dom\";\nimport Input from './Input.js';\nimport API from \"../utils/API\";\nimport Results from './Results.js';\n\nclass Search extends React.Component {\n\n     constructor(props) {\n          super(props);\n\n     this.state = {\n          title: \"\",\n          toResults: false,\n          results: []\n       };\n\n     }\n\n     componentDidMount() {\n          console.log(\"Search mounted\");\n     }\n\n     handleInputChange = event => {\n          const { name, value } = event.target;\n               this.setState({\n                    [name]: value\n               });\n     };\n\n     handleFormSubmit = event => {\n          event.preventDefault();\n          if (this.state.title) {\n\n               const title = this.state.title.trim();\n               console.log(title);\n\n               API.getNewBooks(title)\n                  .then(res => {\n\n                    console.log(res.data.items);\n\n                    this.setState({\n                      toResults: true,\n                      results: res.data.items\n                    });\n                  })\n                  .catch(err => console.log(err));\n              }\n     }\n\n\nrender() {\n\n          console.log(this.state.title);\n\n          if (this.state.toResults) {\n           return <Redirect to={{\n             pathname: \"/results\",\n             data: { results: this.state.results }\n           }} />\n         }\n\n       return (\n         <div className=\"search-page-area single-page\">\n           <h1>Search for Books</h1>\n           <form id=\"book-title-search\">\n                 <Input\n                   value={this.state.title}\n                   onChange={this.handleInputChange}\n                   name=\"title\"\n                   label=\"Book Title\"\n                   placeholder=\"Search for a book title or author...\"\n                 />\n                 <button\n                   onClick={this.handleFormSubmit}\n                   className=\"btn btn-info\"\n                 >\n                   Find It\n                 </button>\n          </form>\n         </div>\n       );\n\n }\n\n}\n\nexport default Search;\n","import React from 'react';\n\nconst Logout = (props) => {\n\n     return (\n          <button type=\"submit\" onClick={props.logOutUser}>Log Out</button>\n     );\n\n}\n\nexport default Logout;\n","import React from 'react';\n\nconst ChangePassword = (props) => {\n\n     return (\n          <button type=\"submit\" onClick={props.resetPassword}>Change Password via Email Link</button>\n     );\n\n}\n\nexport default ChangePassword;\n","import React from 'react';\n\nconst DeleteAccount = (props) => {\n\n     const nowDeleteAccount = (event) => {\n          props.deleteAccount();\n     }\n\n     return (\n          <button\n               type=\"submit\"\n               onClick={e =>\n            window.confirm(\n              \"Are you sure you want to permanelty delete your account? All of your information will be removed. You cannot undo this action.\"\n         ) && nowDeleteAccount()\n          }>Delete My Account</button>\n     );\n\n}\n\nexport default DeleteAccount;\n","import Rebase from 're-base';\nimport firebase from 'firebase';\n\nconst firebaseApp = firebase.initializeApp({\n     apiKey: \"AIzaSyDniUweenII-q4xtU2jywgLN_lVEcLNnlM\",\n     authDomain: \"bookshelf-9d11e.firebaseapp.com\",\n     databaseURL: \"https://bookshelf-9d11e.firebaseio.com\",\n     projectId: \"bookshelf-9d11e\",\n     storageBucket: \"bookshelf-9d11e.appspot.com\",\n     messagingSenderId: \"16890829596\",\n     appId: \"1:16890829596:web:44b99ad2e1677bca39f8d9\"\n})\n\nconst base = Rebase.createClass(firebaseApp.database());\n\n// This is a named export\nexport { firebaseApp };\n\n// This is a default export\nexport default base;\n","import React from 'react';\nimport Logout from './Logout.js';\nimport ChangePassword from './ChangePassword.js';\nimport DeleteAccount from './DeleteAccount.js';\nimport base from '../base';\nimport { firebaseApp } from '../base';\n\nclass Settings extends React.Component {\n\n\n     constructor(props) {\n          super(props);\n\n          this.state = {\n              emailedResetLink: false,\n            };\n\n     }\n\n\n\n     resetPassword = () => {\n\n          var auth = firebaseApp.auth();\n          const emailAddress = this.props.loggedInEmail;\n\n          auth.sendPasswordResetEmail(emailAddress).then(function() {\n            // Email sent.\n            console.log(\"Reset password email sent\");\n\n          }).catch(function(error) {\n            // An error happened.\n            console.log(\"ERROR: could not send reset password email\");\n          });\n\n          this.setState({ emailedResetLink: true });\n\n     }\n\n\n     deleteAccount = () => {\n\n          var user = firebaseApp.auth().currentUser;\n\n          user.delete().then(function() {\n            // User deleted.\n            console.log(\"Current User PERMANENTLY DELETED\");\n          }).catch(function(error) {\n            // An error happened.\n            console.log(\"ERROR: could not delete current user\");\n          });\n\n          this.props.permanentlyDeleteUserAndInfo(user);\n\n     }\n\n\n     render() {\n\n\n       return (\n         <div className=\"settings-page-area single-page\">\n           <h1>Settings</h1>\n           <p>Currently logged in as: {this.props.loggedInEmail}</p>\n           <Logout logOutUser={this.props.logOutUser} />\n           <ChangePassword resetPassword={this.resetPassword} />\n           <DeleteAccount deleteAccount={this.deleteAccount} />\n         </div>\n       );\n     }\n\n\n}\n\nexport default Settings;\n","import React from 'react';\n\nfunction NotFound() {\n  return (\n    <div className=\"settings-page-area\">\n      <h1>Not Found - please go back to the homepage.</h1>\n    </div>\n  );\n}\n\nexport default NotFound;\n","import React, { Component } from 'react';\nimport Select from 'react-select';\n\nclass SelectToReadView extends React.Component {\n\n     constructor(props) {\n          super(props);\n\n     }\n\n\n     setView = (selectedOption) => {\n          if(selectedOption) {\n               this.props.changeToReadView(selectedOption);\n          }\n\n     }\n\n\n\n     render() {\n\n          const defaultView = this.props.defaultView;\n          console.log(defaultView);\n\n               var myViewToPublish = null;\n               if( defaultView === 'date' ) { myViewToPublish = 'Date (Recently Added)'; }\n               if( defaultView === 'alphabetical' ) { myViewToPublish = 'Alphabetical'; }\n\n          let defaultViewPublish = {\n               value: defaultView,\n               label: myViewToPublish\n          };\n          if( defaultView === null ) { defaultViewPublish = null; }\n          //console.log(defaultView);\n\n          const ratingOptions = [\n               { value: 'alphabetical', label: 'Alphabetical' },\n               { value: 'date', label: 'Date (Recently Added)' },\n          ];\n\n          if( defaultView ) {\n\n               return (\n                 <Select\n                    placeholder='Alphabetical'\n                    options={ratingOptions}\n                    defaultValue={defaultViewPublish}\n                    isClearable\n                    isSearchable\n                    onChange={this.setView}\n                 />\n               );\n\n          } else {\n\n               return (\n                 <Select\n                    placeholder='Alphabetical'\n                    options={ratingOptions}\n                    isClearable\n                    isSearchable\n                    onChange={this.setView}\n                 />\n               );\n\n          }\n\n     }\n\n}\n\nexport default SelectToReadView;\n","import React from 'react';\nimport BookCard from './BookCard.js';\nimport SelectToReadView from './SelectToReadView.js';\n\nvar shortid = require('shortid');\n\nclass SavedForLater extends React.Component {\n\n     constructor(props){\n        super(props);\n        this.state = {\n             booksToRead: [],\n             booksToReadView: '',\n      };\n    }\n\n\n\n\n    render() {\n\n         const booksToRead = this.props.booksToRead;\n         console.log(booksToRead);\n         console.log(booksToRead.length);\n\n         let orderedBooks = null;\n\n               // order these books!\n               if( this.props.booksToReadView === 'alphabetical') {\n                    orderedBooks = [...booksToRead].sort((a, b) => (a.volumeInfo.title > b.volumeInfo.title) ? 1 : -1);\n\n               }\n\n               if( this.props.booksToReadView === 'date') {\n\n                         // New sorting\n                         orderedBooks = [...booksToRead].sort(function (a, b) {\n\n                         \t// If the first item has a higher number, move it down\n                         \t// If the first item has a lower number, move it up\n                         \tif (a.bookshelfTimestamp > b.bookshelfTimestamp) return -1;\n                         \tif (a.bookshelfTimestamp < b.bookshelfTimestamp) return 1;\n\n                         \t// If the count number is the same between both items, sort alphabetically\n                         \t// If the first item comes first in the alphabet, move it up\n                         \t// Otherwise move it down\n                         \tif (a.volumeInfo.title > b.volumeInfo.title) return 1;\n               \t          if (a.volumeInfo.title < b.volumeInfo.title) return -1;\n\n                         });\n\n               }\n\n               if( this.props.booksToReadView === 'rating') {\n\n                         // New sorting\n                         orderedBooks = [...booksToRead].sort(function (a, b) {\n\n                         \t// If the first item has a higher number, move it down\n                         \t// If the first item has a lower number, move it up\n                         \tif (a.bookshelfRating > b.bookshelfRating) return -1;\n                         \tif (a.bookshelfRating < b.bookshelfRating) return 1;\n\n                         \t// If the count number is the same between both items, sort alphabetically\n                         \t// If the first item comes first in the alphabet, move it up\n                         \t// Otherwise move it down\n                         \tif (a.volumeInfo.title > b.volumeInfo.title) return 1;\n               \t          if (a.volumeInfo.title < b.volumeInfo.title) return -1;\n\n                         });\n\n               }\n\n\n\n       if( booksToRead.length === 0 || booksToRead === undefined ) {\n\n                return(\n                <div className=\"saved-for-later-area single-page\">\n                  <h1>To Read</h1>\n                       <p className=\"no-books-yet-message\">You don't have any books saved for later. But you can <a href=\"/search\">run a search</a> and start adding books!</p>\n                  <div>{this.props.loggedInEmail}</div>\n                </div>\n                );\n\n           } else {\n\n    return(\n    <div className=\"saved-for-later-area single-page\">\n      <h1>To Read</h1>\n           <div className=\"view-type\">\n                     <div className=\"viewer-label\">View Your Books by: </div>\n                     <div className=\"viewer-selector-area\">\n                          <SelectToReadView\n                               defaultView={this.props.booksToReadView}\n                               changeToReadView={this.props.changeToReadView}\n                          />\n                </div>\n           </div>\n           <div className=\"results-grid\">\n                {orderedBooks.map((book, index) => (\n                     <BookCard\n                              key={book.id}\n                              book={book}\n                              editBook={this.props.editBook}\n                              moveBooktoAlreadyRead={this.props.moveBooktoAlreadyRead}\n                              removeBookFromToRead={this.props.removeBookFromToRead}\n                              savedForLater={true}\n                              toRead={true}\n                              addNewImagesToRead={this.props.addNewImagesToRead}\n                         />\n              ))}\n         </div>\n    </div>\n    );\n\n     }\n\n    }\n\n}\n\n\nexport default SavedForLater;\n","import React, { Component } from 'react';\nimport Select from 'react-select';\n\nclass SelectAlreadyReadView extends React.Component {\n\n     constructor(props) {\n          super(props);\n\n     }\n\n\n     setView = (selectedOption) => {\n          if(selectedOption) {\n               this.props.changeAlreadyReadView(selectedOption);\n          }\n\n     }\n\n\n\n     render() {\n\n          const defaultView = this.props.defaultView;\n          console.log(defaultView);\n\n               var myViewToPublish = null;\n               if( defaultView === 'alphabetical' ) { myViewToPublish = 'Alphabetical'; }\n               if( defaultView === 'rating' ) { myViewToPublish = 'Rating (High to Low)'; }\n               if( defaultView === 'date' ) { myViewToPublish = 'Date (Recently Completed)'; }\n\n          let defaultViewPublish = {\n               value: defaultView,\n               label: myViewToPublish\n          };\n          if( defaultView === null ) { defaultViewPublish = null; }\n          //console.log(defaultView);\n\n          const ratingOptions = [\n               { value: 'alphabetical', label: 'Alphabetical' },\n               { value: 'rating', label: 'Rating (High to Low)' },\n               { value: 'date', label: 'Date (Recently Completed)' },\n          ];\n\n          if( defaultView ) {\n\n               return (\n                 <Select\n                    placeholder='Rating'\n                    options={ratingOptions}\n                    defaultValue={defaultViewPublish}\n                    isClearable\n                    isSearchable\n                    onChange={this.setView}\n                 />\n               );\n\n          } else {\n\n               return (\n                 <Select\n                    placeholder='Rating'\n                    options={ratingOptions}\n                    isClearable\n                    isSearchable\n                    onChange={this.setView}\n                 />\n               );\n\n          }\n\n     }\n\n}\n\nexport default SelectAlreadyReadView;\n","import React from 'react';\nimport BookCard from './BookCard.js';\nimport SelectAlreadyReadView from './SelectAlreadyReadView';\n\nvar shortid = require('shortid');\n\nclass PreviouslyRead extends React.Component {\n\n     constructor(props){\n        super(props);\n        this.state = {\n             // booksAlreadyRead: [],\n             // booksAlreadyReadView: '',\n      };\n    }\n\n\n\n\n    render() {\n\n         const booksAlreadyRead = this.props.booksAlreadyRead;\n         console.log(booksAlreadyRead);\n\n         console.log(this.props.booksAlreadyReadView);\n         let orderedBooks = null;\n\n               // order these books!\n               if( this.props.booksAlreadyReadView === 'alphabetical') {\n                    orderedBooks = [...booksAlreadyRead].sort((a, b) => (a.volumeInfo.title > b.volumeInfo.title) ? 1 : -1);\n\n               }\n\n               if( this.props.booksAlreadyReadView === 'date') {\n\n                         // New sorting\n                         orderedBooks = [...booksAlreadyRead].sort(function (a, b) {\n\n                         \t// If the first item has a higher number, move it down\n                         \t// If the first item has a lower number, move it up\n                         \tif (a.bookshelfTimestamp > b.bookshelfTimestamp) return -1;\n                         \tif (a.bookshelfTimestamp < b.bookshelfTimestamp) return 1;\n\n                         \t// If the count number is the same between both items, sort alphabetically\n                         \t// If the first item comes first in the alphabet, move it up\n                         \t// Otherwise move it down\n                         \tif (a.volumeInfo.title > b.volumeInfo.title) return 1;\n               \t          if (a.volumeInfo.title < b.volumeInfo.title) return -1;\n\n                         });\n\n               }\n\n               if( this.props.booksAlreadyReadView === 'rating') {\n\n                         // New sorting\n                         orderedBooks = [...booksAlreadyRead].sort(function (a, b) {\n\n                         \t// If the first item has a higher number, move it down\n                         \t// If the first item has a lower number, move it up\n                         \tif (a.bookshelfRating > b.bookshelfRating) return -1;\n                         \tif (a.bookshelfRating < b.bookshelfRating) return 1;\n\n                         \t// If the count number is the same between both items, sort alphabetically\n                         \t// If the first item comes first in the alphabet, move it up\n                         \t// Otherwise move it down\n                         \tif (a.volumeInfo.title > b.volumeInfo.title) return 1;\n               \t          if (a.volumeInfo.title < b.volumeInfo.title) return -1;\n\n                         });\n\n               }\n\n\n\n\n\n         if( booksAlreadyRead.length === 0 || booksAlreadyRead === undefined ) {\n\n                  return(\n                  <div className=\"previously-read-area single-page\">\n                    <h1>Already Read</h1>\n                         <p className=\"no-books-yet-message\">You haven't recorded any books yet. But you can <a href=\"/search\">run a search</a> and start adding books!</p>\n                    <div>{this.props.loggedInEmail}</div>\n                  </div>\n                  );\n\n             } else {\n\n         return(\n         <div className=\"previously-read-area single-page\">\n           <h1>Already Read</h1>\n               <div className=\"view-type\">\n                         <div className=\"viewer-label\">View Your Books by: </div>\n                         <div className=\"viewer-selector-area\">\n                              <SelectAlreadyReadView\n                                   defaultView={this.props.booksAlreadyReadView}\n                                   changeAlreadyReadView={this.props.changeAlreadyReadView}\n                              />\n                    </div>\n               </div>\n                <div className=\"results-grid\">\n                {orderedBooks.map((book, index) => (\n                     <BookCard\n                              key={book.id}\n                              book={book}\n                              editBook={this.props.editBook}\n                              removeBookFromAlreadyRead={this.props.removeBookFromAlreadyRead}\n                              alreadyRead={true}\n                              addNewImagesAlreadyRead={this.props.addNewImagesAlreadyRead}\n                         />\n              ))}\n              </div>\n         </div>\n         );\n\n         }\n\n    }\n\n}\n\n\nexport default PreviouslyRead;\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { firebaseApp } from '../base';\n\nclass Register extends React.Component {\n     constructor(props) {\n          super(props);\n          this.state = {\n            email: '',\n            password: '',\n            error: null,\n          };\n\n          console.log(this.props);\n     }\n\n\nhandleInputChange = (event) => {\n   this.setState({ [event.target.name]: event.target.value });\n   console.log(event.target.value);\n };\n\nhandleSubmit = (event) => {\n   event.preventDefault();\n   console.log('Registration submitted');\n   const { email, password } = this.state;\n   console.log(this.state);\nfirebaseApp\n     .auth()\n     .createUserWithEmailAndPassword(email, password)\n     .then((user) => {\n          //console.log(user);\n          //this.props.history.push('/');\n\n          // add new user to App-->state and Firebase\n          this.props.registerNewUser(user);\n     })\n     .catch((error) => {\n       this.setState({ error: error });\n     });\n };\n\n     render() {\n\n          //const classes = useStyles();\n          const { email, password, error } = this.state;\n          //console.log(this.props.registerNewUser);\n\n          return (\n               <div className=\"login-form-area\">\n               <p>Enter your information below to register for your free Bookshelf:</p>\n               {error ? (\n                     <div>{error.message}</div>\n               ) : null}\n\n               <form id=\"registration-form\" onSubmit={this.handleSubmit}>\n                    <div className=\"registration-area\">\n                         <input\n                             type=\"text\"\n                             id=\"login-form-email\"\n                             name=\"email\"\n                             label=\"Email\"\n                             required\n                             value={this.email}\n                             onChange={this.handleInputChange}\n                             />\n                        </div>\n                        <div className=\"registration-area\">\n                             <input\n                                 type=\"text\"\n                                 id=\"login-form-password\"\n                                 name=\"password\"\n                                 label=\"Password\"\n                                 required\n                                 placeholder=\"Password\"\n                                 value={this.password}\n                                onChange={this.handleInputChange}\n                                 />\n                       </div>\n                       <button type=\"submit\">Register Now</button>\n                       </form>\n             </div>\n          );\n\n     }\n\n}\n\nexport default Register;\n","import React from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport Landing from './Landing.js';\nimport Search from './Search.js';\nimport Settings from './Settings.js';\nimport NotFound from './NotFound.js';\nimport SavedForLater from './SavedForLater.js';\nimport PreviouslyRead from './PreviouslyRead.js';\nimport Results from './Results.js';\nimport Register from './Register.js';\n\nclass Router extends React.Component {\n\n     constructor(props) {\n          super(props);\n\n     this.state = {\n       };\n\n     }\n\n     render() {\n\n          return(\n\n               <div className=\"clb-grail-body\">\n     <HashRouter basename=\"/\">\n          <Switch>\n               <Route exact path=\"/\"\n                    component={() =>\n                         <Landing\n                              booksToRead={this.props.booksToRead}\n                              booksAlreadyRead={this.props.booksAlreadyRead}\n                              editBook={this.props.editBook}\n                              moveBooktoAlreadyRead={this.props.moveBooktoAlreadyRead}\n                              removeBookFromToRead={this.props.removeBookFromToRead}\n                              removeBookFromAlreadyRead={this.props.removeBookFromAlreadyRead}\n                              addNewImagesToRead={this.props.addNewImagesToRead}\n                              addNewImagesAlreadyRead={this.props.addNewImagesAlreadyRead}\n                         />}\n               />\n               <Route exact path=\"/search\" component={Search} />\n               <Route exact path=\"/results\"\n                    render={(props) => <Results {...props} test={true}\n                                                  addBookAlreadyRead={this.props.addBookAlreadyRead}\n                                                  addBookToRead={this.props.addBookToRead}\n                                             />}\n               />\n\n               <Route exact path=\"/saved\"\n                    component={() =>\n                         <SavedForLater\n                              booksToRead={this.props.booksToRead}\n                              loggedInID={this.props.loggedInID}\n                              loggedInEmail={this.props.loggedInEmail}\n                              editBook={this.props.editBookToRead}\n                              booksToReadView={this.props.booksToReadView}\n                              changeToReadView={this.props.changeToReadView}\n                              moveBooktoAlreadyRead={this.props.moveBooktoAlreadyRead}\n                              removeBookFromToRead={this.props.removeBookFromToRead}\n                              addNewImagesToRead={this.props.addNewImagesToRead}\n                         />}\n               />\n\n               <Route exact path=\"/read\"\n                    component={() =>\n                         <PreviouslyRead\n                              booksAlreadyRead={this.props.booksAlreadyRead}\n                              booksAlreadyReadView={this.props.booksAlreadyReadView}\n                              changeAlreadyReadView={this.props.changeAlreadyReadView}\n                              loggedInID={this.props.loggedInID}\n                              loggedInEmail={this.props.loggedInEmail}\n                              editBook={this.props.editBook}\n                              removeBookFromAlreadyRead={this.props.removeBookFromAlreadyRead}\n                              addNewImagesAlreadyRead={this.props.addNewImagesAlreadyRead}\n                         />}\n               />\n               <Route exact path=\"/settings\"\n                    component={() =>\n                         <Settings\n                              logOutUser={this.props.logOutUser}\n                              loggedInID={this.props.loggedInID}\n                              loggedInEmail={this.props.loggedInEmail}\n                              resetPassword={this.props.resetPassword}\n                              permanentlyDeleteUserAndInfo={this.props.permanentlyDeleteUserAndInfo}\n                         />}\n               />\n               <Route exact path=\"/register\"\n                    component={() =>\n                         <Register\n                              logOutUser={this.props.logOutUser}\n                              loggedInID={this.props.loggedInID}\n                              loggedInEmail={this.props.loggedInEmail}\n                         />}\n               />\n               <Route component={NotFound} />\n          </Switch>\n     </HashRouter>\n          </div>);\n\n     }\n\n}\n\nexport default Router;\n","import React from 'react';\nimport Router from './Router.js';\nimport base from '../base';\nimport { firebaseApp } from '../base';\n\n\n\nvar shortid = require('shortid');\n\nclass BookManager extends React.Component {\n\n     constructor(props){\n        super(props);\n        this.state = {\n             booksToRead: [],\n             booksAlreadyRead: [],\n             booksToReadView: 'alphabetical',\n             booksAlreadyReadView: 'alphabetical',\n             settings: [],\n      };\n    }\n\n\n    componentDidMount(){\n\n       console.log(\"componentDidMount\");\n       const loggedInID = this.props.loggedInID;\n       console.log(\"loggedInID:\" + loggedInID);\n\n       base.syncState(`${loggedInID}/booksToRead`, {\n         context: this,\n         state: 'booksToRead',\n         asArray: true\n       });\n\n       base.syncState(`${loggedInID}/booksAlreadyRead`, {\n         context: this,\n         state: 'booksAlreadyRead',\n         asArray: true\n       });\n\n       base.syncState(`${loggedInID}/booksToReadView`, {\n         context: this,\n         state: 'booksToReadView',\n         defaultValue: 'Alphabetical',\n         asArray: false\n       });\n\n       base.syncState(`${loggedInID}/booksAlreadyReadView`, {\n         context: this,\n         state: 'booksAlreadyReadView',\n         defaultValue: 'Alphabetical',\n         asArray: false\n       });\n\n  }\n\n\n     // Functions to maniuplate state / books\n     addBookAlreadyRead = (bookObj) => {\n         console.log(bookObj);\n         bookObj.bookshelfTimestamp = Date.now();\n         bookObj.bookshelfRating = 0;\n         bookObj.bookshelfNote = '';\n         bookObj.bookshelfCover = null;\n         this.setState(prevState => ({\n            booksAlreadyRead: [...prevState.booksAlreadyRead, bookObj]\n           }));\n\n       }\n\n\n       addBookToRead = (bookObj) => {\n          console.log(bookObj);\n          bookObj.bookshelfTimestamp = Date.now();\n          bookObj.bookshelfRating = 0;\n          bookObj.bookshelfNote = '';\n          bookObj.bookshelfCover = null;\n          this.setState(prevState => ({\n             booksToRead: [...prevState.booksToRead, bookObj]\n            }));\n\n        }\n\n\n        moveBooktoAlreadyRead = (bookObj) => {\n           console.log(bookObj);\n           bookObj.bookshelfTimestamp = Date.now();\n           bookObj.bookshelfRating = 0;\n           bookObj.bookshelfCover = null;\n           // bookObj.volumeInfo.imageLinks.large = '';                  //new value, image only\n           // bookObj.volumeInfo.imageLinks.medium = '';\n           // bookObj.volumeInfo.imageLinks.small = '';\n           this.setState(prevState => ({\n              booksAlreadyRead: [...prevState.booksAlreadyRead, bookObj]\n             }));\n\n            console.log(\"MOVED: \" + JSON.stringify(bookObj));\n            let bookID = bookObj.id;\n            let clbCopyBookState = [...this.state.booksToRead];\n            let getBookObjInState = clbCopyBookState.filter(obj => {\n             return obj.id === bookID\n            });\n\n            let index = clbCopyBookState.map(function(e) { return e.id; }).indexOf(bookID);\n            clbCopyBookState.splice(index, 1);\n\n            this.setState({ booksToRead: clbCopyBookState });\n\n         }\n\n\n       removeBookFromAlreadyRead = (bookObj) => {\n          console.log(\"Removed: \" + JSON.stringify(bookObj));\n          let bookID = bookObj.id;\n          let clbCopyBookState = [...this.state.booksAlreadyRead];\n          let getBookObjInState = clbCopyBookState.filter(obj => {\n           return obj.id === bookID\n          });\n\n          let index = clbCopyBookState.map(function(e) { return e.id; }).indexOf(bookID);\n          clbCopyBookState.splice(index, 1);\n\n          this.setState({ booksAlreadyRead: clbCopyBookState });\n\n        }\n\n\n        removeBookFromToRead = (bookObj) => {\n           console.log(\"Removed: \" + JSON.stringify(bookObj));\n           let bookID = bookObj.id;\n           let clbCopyBookState = [...this.state.booksToRead];\n           let getBookObjInState = clbCopyBookState.filter(obj => {\n            return obj.id === bookID\n           });\n\n           let index = clbCopyBookState.map(function(e) { return e.id; }).indexOf(bookID);\n           clbCopyBookState.splice(index, 1);\n\n           this.setState({ booksToRead: clbCopyBookState });\n\n         }\n\n\n         editBook = (bookObj) => {\n            console.log(\"Editing this book: \" + JSON.stringify(bookObj));\n               let bookID = bookObj.id;\n               let clbCopyBookState = [...this.state.booksAlreadyRead];\n               let getBookObjInState = clbCopyBookState.filter(obj => {\n                 return obj.id === bookID\n               });\n               let index = clbCopyBookState.map(function(e) { return e.id; }).indexOf(bookID);\n               let ids = [...this.state.booksAlreadyRead];     // create the copy of state array\n               ids[index] = bookObj;                  //new value\n               console.log(ids[index]);\n               this.setState({ booksAlreadyRead: ids });            //update the value\n\n          }\n\n\n\n          editBookToRead = (bookObj) => {\n            console.log(\"Editing this book: \" + JSON.stringify(bookObj));\n               let bookID = bookObj.id;\n               let clbCopyBookState = [...this.state.booksToRead];\n               let getBookObjInState = clbCopyBookState.filter(obj => {\n                 return obj.id === bookID\n               });\n               let index = clbCopyBookState.map(function(e) { return e.id; }).indexOf(bookID);\n               let ids = [...this.state.booksToRead];     // create the copy of state array\n               ids[index] = bookObj;                  //new value\n               console.log(ids[index]);\n               this.setState({ booksToRead: ids });            //update the value\n\n          }\n\n\n\n          addNewImagesAlreadyRead = (bookObj) => {\n               console.log(\"Editing this book: \" + JSON.stringify(bookObj));\n                  let bookID = bookObj.id;\n                  let clbCopyBookState = [...this.state.booksAlreadyRead];\n                  let getBookObjInState = clbCopyBookState.filter(obj => {\n                    return obj.id === bookID\n                  });\n                  let index = clbCopyBookState.map(function(e) { return e.id; }).indexOf(bookID);\n                  let ids = [...this.state.booksAlreadyRead];     // create the copy of state array\n                  if( bookObj.volumeInfo.imageLinks.large ) { ids[index].volumeInfo.imageLinks.large = bookObj.volumeInfo.imageLinks.large; } else { ids[index].volumeInfo.imageLinks.large = '' }                 //new value, image only\n                  if( bookObj.volumeInfo.imageLinks.medium ) { ids[index].volumeInfo.imageLinks.medium = bookObj.volumeInfo.imageLinks.medium; } else { ids[index].volumeInfo.imageLinks.medium = '' }\n                  if( bookObj.volumeInfo.imageLinks.small ) { ids[index].volumeInfo.imageLinks.small = bookObj.volumeInfo.imageLinks.small; } else { ids[index].volumeInfo.imageLinks.small = '' }\n                  if( bookObj.volumeInfo.imageLinks.smallThumbnail ) { ids[index].volumeInfo.imageLinks.smallThumbnail = bookObj.volumeInfo.imageLinks.smallThumbnail; } else { ids[index].volumeInfo.imageLinks.smallThumbnail = '' }\n                  if( bookObj.volumeInfo.imageLinks.thumbnail ) { ids[index].volumeInfo.imageLinks.thumbnail = bookObj.volumeInfo.imageLinks.thumbnail; } else { ids[index].volumeInfo.imageLinks.thumbnail = '' }\n                  console.log(ids[index]);\n                  this.setState({ booksAlreadyRead: ids });            //update the value\n          }\n\n\n          addNewImagesToRead = (bookObj) => {\n               console.log(\"Editing this book: \" + JSON.stringify(bookObj));\n                  let bookID = bookObj.id;\n                  let clbCopyBookState = [...this.state.booksToRead];\n                  let getBookObjInState = clbCopyBookState.filter(obj => {\n                    return obj.id === bookID\n                  });\n                  let index = clbCopyBookState.map(function(e) { return e.id; }).indexOf(bookID);\n                  let ids = [...this.state.booksToRead];     // create the copy of state array\n                  if( bookObj.volumeInfo.imageLinks.large ) { ids[index].volumeInfo.imageLinks.large = bookObj.volumeInfo.imageLinks.large; } else { ids[index].volumeInfo.imageLinks.large = ''; }               //new value, image only\n                  if( bookObj.volumeInfo.imageLinks.medium ) { ids[index].volumeInfo.imageLinks.medium = bookObj.volumeInfo.imageLinks.medium; } else { ids[index].volumeInfo.imageLinks.medium = ''; }\n                  if( bookObj.volumeInfo.imageLinks.small ) { ids[index].volumeInfo.imageLinks.small = bookObj.volumeInfo.imageLinks.small; } else { ids[index].volumeInfo.imageLinks.small = ''; }\n                  if( bookObj.volumeInfo.imageLinks.smallThumbnail) { ids[index].volumeInfo.imageLinks.smallThumbnail = bookObj.volumeInfo.imageLinks.smallThumbnail; } else { ids[index].volumeInfo.imageLinks.smallThumbnail = ''; }\n                  if( bookObj.volumeInfo.imageLinks.thumbnail) { ids[index].volumeInfo.imageLinks.thumbnail = bookObj.volumeInfo.imageLinks.thumbnail; } else { ids[index].volumeInfo.imageLinks.thumbnail = ''; }\n                  console.log(ids[index]);\n                  this.setState({ booksToRead: ids });            //update the value\n          }\n\n\n          changeAlreadyReadView = (selectedOption) => {\n              // console.log('CHANGE BEER CARD VIEW');\n              // console.log(newViewString);\n\n              let newBookCardView = 'alphabetical';\n              if(selectedOption) {\n                  if( selectedOption.value === 'rating' ) { newBookCardView = 'rating'; }\n                  if( selectedOption.value === 'date' ) { newBookCardView = 'date'; }\n              }\n\n              this.setState({ booksAlreadyReadView: newBookCardView });\n\n         }\n\n\n\n         changeToReadView = (selectedOption) => {\n\n            let newBookCardView = 'alphabetical';\n            if(selectedOption) {\n                 if( selectedOption.value === 'date' ) { newBookCardView = 'date'; }\n            }\n\n            this.setState({ booksToReadView: newBookCardView });\n\n        }\n\n\n\n\n  render() {\n\n       const booksAlreadyRead = JSON.stringify(this.state.booksAlreadyRead);\n       // console.log(this.props.loggedInID);\n       // console.log(this.props.loggedInEmail);\n       // console.log(this.addBookAlreadyRead);\n       console.log(this.state.booksAlreadyRead);\n\n       return(\n            <Router\n                 logOutUser={this.props.logOutUser}\n                 loggedInID={this.props.loggedInID}\n                 loggedInEmail={this.props.loggedInEmail}\n                 permanentlyDeleteUserAndInfo={this.props.permanentlyDeleteUserAndInfo}\n                 booksAlreadyRead={this.state.booksAlreadyRead}\n                 booksAlreadyReadView={this.state.booksAlreadyReadView}\n                 booksToReadView={this.state.booksToReadView}\n                 changeAlreadyReadView={this.changeAlreadyReadView}\n                 changeToReadView={this.changeToReadView}\n                 booksToRead={this.state.booksToRead}\n                 editBook={this.editBook}\n                 editBookToRead={this.editBookToRead}\n                 addBookAlreadyRead={this.addBookAlreadyRead}\n                 addBookToRead={this.addBookToRead}\n                 moveBooktoAlreadyRead={this.moveBooktoAlreadyRead}\n                 removeBookFromAlreadyRead={this.removeBookFromAlreadyRead}\n                 removeBookFromToRead={this.removeBookFromToRead}\n                 addNewImagesAlreadyRead={this.addNewImagesAlreadyRead}\n                 addNewImagesToRead={this.addNewImagesToRead}\n            />\n       );\n\n       }\n\n  }\n\n\nexport default BookManager;\n","import React from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport base from '../base';\nimport { firebaseApp } from '../base';\n\nclass LostPassword extends React.Component {\n\n     constructor(props) {\n       super(props);\n       this.state = {\n            showModal: false,\n            email: '',\n            sentEmail: false,\n       };\n\n       this.handleEmailChange = this.handleEmailChange.bind(this);\n       this.handleSubmit = this.handleSubmit.bind(this);\n\n     }\n\n     sentEmailAddress = null;\n\n     handleShow = () => this.setState({ showModal: true });\n     handleClose = () => (\n          this.setState({\n               showModal: false\n          })\n     );\n\n     handleEmailChange(event) {\n          this.setState({ email: event.target.value });\n     }\n\n     handleSubmit(event) {\n       console.log('Lost password, attempting to send email to: ' + this.state.email);\n       event.preventDefault();\n\n       //this.props.authenticateUser( this.state.email, this.state.password );\n\n           var auth = firebaseApp.auth();\n           const emailAddress = this.state.email;\n\n           auth.sendPasswordResetEmail(emailAddress).then(function() {\n             // Email sent.\n             console.log(\"Reset password email sent\");\n\n           }).catch(function(error) {\n             // An error happened.\n             console.log(\"ERROR: could not send reset password email\");\n             console.log(error);\n           });\n\n           this.sentEmailAddress = this.emailAdress;\n           this.setState({\n                sentEmail: true\n           });\n\n     }\n\n\n\n\n     render() {\n\n          const emailAdress = this.sentEmailAddress;\n\n          return (\n               <div className=\"lost-password-area\">\n                 <button onClick={this.handleShow} >\n                   Lost Password\n                 </button>\n\n                 <Modal show={this.state.showModal} onHide={this.handleClose} className=\"clb-single-beer-notes\">\n                   <Modal.Header closeButton>\n                     <Modal.Title>Lost Your Password</Modal.Title>\n                   </Modal.Header>\n                   <Modal.Body>\n                   { this.state.sentEmail !== true ? (\n                         <form className=\"lost-pw-area\" onSubmit={this.handleSubmit} >\n                          Enter your email below to reset your password:\n                          <div className=\"login-item\">\n                          <input\n                              type=\"text\"\n                              id=\"lost-pw-form-email\"\n                              name=\"email\"\n                              label=\"Email\"\n                              required\n                              onChange={this.handleEmailChange}\n                              />\n                              </div>\n                         <button type=\"submit\" id=\"lost-pw-submit\">Submit</button>\n                         </form> )\n                    : (\n                         <p className=\"sent-email-message\">If an account exists for {this.state.email}, we've sent an email that will allow you to reset your password. Thanks!</p>\n                    )}\n                   </Modal.Body>\n                 </Modal>\n               </div>\n\n          );\n\n     }\n\n}\n\nexport default LostPassword;\n","import React from 'react';\nimport LostPassword from './LostPassword';\nimport Modal from 'react-bootstrap/Modal';\nimport { firebaseApp } from '../base';\nimport Register from './Register';\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n         showModal: false,\n         email: '',\n         password: '',\n         error: null,\n    };\n\n    this.handleEmailChange = this.handleEmailChange.bind(this);\n    this.handlePWChange = this.handlePWChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleRegistrationSubmit = this.handleRegistrationSubmit.bind(this);\n    this.handleShowRegister = this.handleShowRegister.bind(this);\n    this.handleCloseRegister = this.handleCloseRegister.bind(this);\n\n  }\n\n\n  handleShowRegister(event) {\n       event.preventDefault();\n       this.setState({ showModal: true });\n }\n\n  handleCloseRegister(event) {\n       //event.preventDefault();\n       this.setState({\n            showModal: false\n       });\n}\n\n\n  handleEmailChange(event) {\n    this.setState({email: event.target.value});\n  }\n\n  handlePWChange(event) {\n    this.setState({password: event.target.value});\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n\n    this.props.authenticateUser( this.state.email, this.state.password );\n\n  }\n\n\n  handleRegistrationSubmit = (event) => {\n     event.preventDefault();\n     console.log('Registration submitted');\n     const { email, password } = this.state;\n     console.log(this.state);\n  firebaseApp\n       .auth()\n       .createUserWithEmailAndPassword(email, password)\n       .then((user) => {\n            //console.log(user);\n            //this.props.history.push('/');\n\n            // add new user to App-->state and Firebase\n            this.props.registerNewUser(user);\n       })\n       .catch((error) => {\n         this.setState({ error: error });\n       });\n   };\n\n\nrender() {\n\n     const loginError = this.props.loginError;\n     const { email, password, error } = this.state;\n\n     return (\n\n          <div className=\"login-form-area\">\n          <p>Welcome! Bookshelf is an easy, free way to keep track of your reading.<br/>\n          It's for personal use only and your information will never be shared with advertisers or social networks.<br/>\n          If you're new here, <a href=\"/bookshelf/register\" onClick={this.handleShowRegister} >click here to register for a new free account</a>. Or if you've already registered, then simply login below.</p>\n          { loginError === true ?\n               <h2>Incorrect email/password combination. Please try again:</h2>\n               :\n               <h2>Login Below:</h2>\n          }\n          <form className=\"login-area\" onSubmit={this.handleSubmit} >\n          <div className=\"login-item\">\n               <input\n                   type=\"text\"\n                   id=\"login-form-email\"\n                   name=\"email\"\n                   label=\"Email\"\n                   required\n                   onChange={this.handleEmailChange}\n                   />\n                   </div>\n                   <div className=\"login-item\">\n              <input\n                  type=\"text\"\n                  id=\"login-form-password\"\n                  name=\"password\"\n                  label=\"Password\"\n                  required\n                  type=\"password\"\n                  onChange={this.handlePWChange}\n                  />\n             </div>\n             <button type=\"submit\">Submit</button>\n             </form>\n             <LostPassword />\n\n\n             <Modal show={this.state.showModal} onHide={this.handleCloseRegister} className=\"clb-single-beer-notes\">\n               <Modal.Header closeButton>\n                 <Modal.Title><h3>Register for a New Account</h3></Modal.Title>\n               </Modal.Header>\n               <Modal.Body>\n                    <Register\n                         registerNewUser={this.props.registerNewUser}\n                    />\n               </Modal.Body>\n             </Modal>\n\n        </div>\n     );\n\n     }\n\n}\n\nexport default Login;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// my components\nimport Login from './Login';\nimport Register from './Register';\nimport Logout from './Logout';\n\n\nexport default function LandingPage(props) {\n\n       return (\n            <div className=\"landing-page-area single-page\">\n             <h1>Login & New User Registration</h1>\n                 <div className=\"login-register-area\">\n                 <Login\n                         authenticateUser={props.authenticateUser}\n                         loginError={props.loginError}\n                         registerNewUser={props.registerNewUser} />\n                 </div>\n            </div>\n\n       );\n}\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.scss';\nimport Header from './components/Header.js';\nimport BookManager from './components/BookManager.js';\nimport LandingPage from './components/LandingPage.js';\n\nimport base from './base';\nimport { firebaseApp } from './base';\n\nclass App extends React.Component {\n     constructor(props) {\n          super(props);\n\n      this.state = {\n         loggedInID: '',\n         loggedInEmail: '',\n         loginError: false,\n       };\n\n     }\n\n\n     componentDidMount() {\n          console.log(\"App.js mounted\");\n     }\n\n\n\n     registerNewUser = (user) => {\n\n             const newUserID = user.user.uid;\n             const newUserEmail = user.user.email;\n              console.log(newUserID);\n\n             // Create new Journal view if it doesn't exist yet for this user\n              firebaseApp.database().ref().update({\n                 [newUserID]: {\n                      ownerID: newUserID,\n                      ownerEmail: newUserEmail,\n                      booksToRead: [],\n                      booksAlreadyRead: [],\n                      booksToReadView: 'Alphabetical',\n                      booksAlreadyReadView: 'Alphabetical',\n                      settings: [],\n                 },\n              });\n\n              this.setState({\n                   loggedInID: newUserID,\n                   loggedInEmail: newUserEmail,\n               });\n               localStorage.setItem('bookshelf.loggedInID', newUserID);\n               localStorage.setItem('bookshelf.loggedInEmail', newUserEmail);\n               console.log(\"REGISTERED AND Logged in: \" + newUserID);\n\n        }\n\n\n        authenticateUser = (email, password) => {\n\n                 console.log(\"AuthenticateUser: \" + email);\n                 // const loggedInID = user.user.uid;\n\n               firebaseApp\n                    .auth()\n                    .signInWithEmailAndPassword(email, password)\n                    .then((user) => {\n                      console.log(\"User successfully LOGGED IN\" + user.user.uid);\n                      this.setState({\n                           loggedInID: user.user.uid,\n                           loggedInEmail: user.user.email,\n                           loginError: false });\n                      localStorage.setItem('bookshelf.loggedInID', user.user.uid);\n                      localStorage.setItem('bookshelf.loggedInEmail', email);\n                    })\n                    .catch((error) => {\n                      console.log(\"ERROR: User trying to log in\");\n                      this.setState({ loginError: true });\n                    });\n\n                }\n\n\n\n      authHandler = async authData => {\n\n           //console.log(authData);\n           const user = firebaseApp.auth().currentUser;\n\n           console.log(user);\n           if( user !== null ) {\n                const userUID = user.uid;\n                console.log(\"Current User ID: \" + userUID);\n                console.log(\"Current User Email: \" + user.email);\n\n                //update state\n                this.setState({\n                     loggedInID: userUID,\n                     loggedInEmail: user.email,\n                       });\n               localStorage.setItem('bookshelf.loggedInID', userUID);\n               localStorage.setItem('bookshelf.loggedInEmail', user.email);\n\n           } else {\n                console.log(\"authHandler == no user found\");\n           }\n\n      }\n\n\n\n\n   logOutUser = event => {\n\n        firebaseApp.auth().signOut().then(function() {\n          // Sign-out successful.\n          console.log(\"Logged OUT successful\");\n\n        }).catch(function(error) {\n          // An error happened.\n          console.log(\"ERROR: Trying to log out\");\n        });\n\n        //update state\n        this.setState({\n             loggedInID: '',\n             loggedInEmail: '',\n          });\n        localStorage.removeItem('bookshelf.loggedInID');\n        localStorage.removeItem('bookshelf.loggedInEmail');\n\n        base.reset();\n\n   }\n\n\n   permanentlyDeleteUserAndInfo = user => {\n\n        console.log(user);\n        const userUID = user.uid;\n\n             base.remove(userUID)\n            .then(() => {\n              console.log(\"User \" + userUID + \" permanently deleted\");\n\n            })\n            .catch(error => {\n              //handle error\n            });\n\n            //update state\n           this.setState({\n                loggedInID: '',\n                loggedInEmail: '',\n             });\n           localStorage.removeItem('bookshelf.loggedInID');\n           localStorage.removeItem('bookshelf.loggedInEmail');\n\n       }\n\n\n\n     render() {\n\n          let loggedInID = this.state.loggedInID;\n          let loggedInEmail = this.state.loggedInEmail;\n          const loginError = this.state.loginError;\n\n          const loggedInIDLocal = localStorage.getItem('bookshelf.loggedInID');\n          const loggedInEmailLocal = localStorage.getItem('bookshelf.loggedInEmail');\n          console.log(\"LOCAL STORAGE: \" + loggedInIDLocal);\n\n          if( loggedInIDLocal !== null ) { loggedInID = loggedInIDLocal; }\n          if( loggedInEmailLocal !== null ) { loggedInEmail = loggedInEmailLocal; }\n\n       return (\n         <div className=\"App\">\n\n           { loggedInID !== '' ?\n               <>\n                     <Header />\n                     <BookManager\n                          logOutUser={this.logOutUser}\n                          loggedInID={loggedInID}\n                          loggedInEmail={loggedInEmail}\n                          permanentlyDeleteUserAndInfo={this.permanentlyDeleteUserAndInfo}\n                     />\n               </>\n               :\n               <>\n                    <Header\n                       logOutUser={this.logOutUser}\n                       permanentlyDeleteUserAndInfo={this.permanentlyDeleteUserAndInfo}\n                    />\n                    <div className=\"logged-out-area\">\n                       <LandingPage\n                              registerNewUser={this.registerNewUser}\n                              authenticateUser={this.authenticateUser}\n                              loginError={loginError}\n                              logOutUser={this.logOutUser}\n                         />\n                       </div>\n             </>\n             }\n\n             <footer className=\"clb-bookshelf-footer\">\n               Bookshelf &middot; <a href=\"https://github.com/tomatillodesign/bookshelf\" target=\"_blank\">Version 1.0</a> &middot; By Chris Liu-Beers, <a href=\"http://tomatillodesign.com\" target=\"_blank\">Tomatillo Design</a>\n             </footer>\n\n         </div>\n       );\n     }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}